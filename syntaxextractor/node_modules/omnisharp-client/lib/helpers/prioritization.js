"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isPriorityCommand = isPriorityCommand;
exports.isNormalCommand = isNormalCommand;
exports.isDeferredCommand = isDeferredCommand;

var _lodash = require("lodash");

var normalCommands = ["findimplementations", "findsymbols", "findusages", "gotodefinition", "typelookup", "navigateup", "navigatedown", "getcodeactions", "filesChanged", "runcodeaction", "autocomplete", "signatureHelp"];
var priorityCommands = ["updatebuffer", "changebuffer", "formatAfterKeystroke"];
var prioritySet = new Set();
var normalSet = new Set();
var deferredSet = new Set();
var undeferredSet = new Set();
(0, _lodash.each)(normalCommands, function (x) {
    normalSet.add(x);
    undeferredSet.add(x);
});
(0, _lodash.each)(priorityCommands, function (x) {
    prioritySet.add(x);
    undeferredSet.add(x);
});
function isPriorityCommand(request) {
    return prioritySet.has(request.command);
}
;
function isNormalCommand(request) {
    return !isDeferredCommand(request) && normalSet.has(request.command);
}
function isDeferredCommand(request) {
    if (request.silent && !isPriorityCommand(request)) {
        return true;
    }
    if (deferredSet.has(request.command)) {
        return true;
    }
    if (undeferredSet.has(request.command)) {
        return false;
    }
    deferredSet.add(request.command);
    return true;
}